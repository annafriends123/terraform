AGENDA
___________

containers
docker installation
25+ commands
writing a simple docker file
a docker file with 1 use case 
problem solving in a docker file
docker volume , docker mount
pushing the docker images to docker hub
backup & restore
customized home page
compose

FROM centos
MAINTAINER BASHA
RUN yum install wget vim -y

FROM vimimage
MAINTAINER BASHA
RUN yum install git -y

FROM ubuntu
MAINTAINER BASHA
RUN apt-get update
RUN apt-get install wget openssh-server -y
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes /' /etc/ssh/sshd_config
RUN echo 'root:root123' | chpasswd
RUN mkdir /var/run/sshd 
CMD ["/usr/sbin/sshd", "-D"]
EXPOSE 22

***docker mount*******
docker volume create my-vol
docker volume inspect my-vol
cd /var/lib/docker/volumes/my-vol/_data
docker run -itd --name=basha --mount source=my-vol,destination=/usr/local/apache2/htdocs httpd:2.4 


***pushing images to docker hub**********
docker login
username
pwd
docker tag apacheimage basha1412/apacheimage
docker push basha1412/apacheimage                                                                                        



****backup*****

docker ps
docker commit "cont_id" backupcontainer(name for ur backup)-- cont ----> image
docker images
docker save -o /root/container.tar backupcontainer(name for ur backup)
cd /root
ls -lrt image--->file**** this .tar file we be stored anywhere , so this is our backup

***to restore****
docker images rmi backupcontainer 
ls -lrt
docker load -i container.tar tar---> image


mysql&link

docker run -d --name db mysql:5.5
docker prune "cont_id"
docker run -d --name db -e MYSQL_ROOT_PASSWORD=admin123 mysql:5.5
link
docker run -d --name myweb-server --link db:mysql -p "8060:80" wordpress

*******customized page********
nginx
mkdir nginx
vi Dockerfile
FROM nginx 
MAINTAINER basha
WORKDIR /usr/share/nginx/html
COPY index.html /usr/share/nginx/html
vi index.html "customized page"
docker build -t nginx .
docker run -itd --name nginxcont -p "8040:80" nginx


docker compose

install docker compose (from official site - https://docs.docker.com/compose/install/)

vi docker-compose.txt
docker run -itd --name cont_name -p "8080:80" img_name
version: "3"
services: #global value
  database:
    image: mysql:5.7
    volumes:
    - ./dats:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
  wordpress:
    image: wordpress
    depends_on: 
    - database
    ports:
    - "8080:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress


mv docker-compose.txt docker-compose.yml
vi docker-compose.yml
docker-compose up -d
docker-compose ps
 








